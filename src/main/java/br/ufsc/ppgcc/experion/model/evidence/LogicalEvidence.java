package br.ufsc.ppgcc.experion.model.evidence;

import br.ufsc.ppgcc.experion.extractor.evidence.PhysicalEvidence;
import br.ufsc.ppgcc.experion.model.evidence.builder.LogicalEvidenceBuilder;
import br.ufsc.ppgcc.experion.model.expert.Expert;
import br.ufsc.ppgcc.experion.view.expertise.Expertise;
import com.fasterxml.jackson.annotation.JsonBackReference;

import javax.persistence.*;
import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

/**
 * A logical evidence is generated from a set of physical evidences, by applying a given method. It represents a
 * more stable expertise evidence that the phyisical evidence.
 *
 * @author Rodrigo Gon√ßalves
 * @version 2019-03-05 - First version
 *
 */
@Entity
public class LogicalEvidence implements Serializable {

    /** Primary key - auto-generated by JPA */
    @GeneratedValue
    @Id
    private int id;

    /** The generated concept from the physical evidences */
    @Lob
    private String concept;

    /** The set of physical evidences used to generate this logical evidence */
    @ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.ALL)
    private Set<PhysicalEvidence> physicalEvidences = new HashSet<>();

    /** The logical evidence builder used to generate this logical evidence */
    @ManyToOne
    private LogicalEvidenceBuilder builder;

    /** The expertise in which this logical evidence was used */
    @ManyToMany
    @JsonBackReference
    private Set<Expertise> expertise = new HashSet<>();

    /** The expert associated with this logical evidence */
    @ManyToOne
    private Expert expert;

    /** The language from the data over which this logical evidence was built */
    private String language;

    public LogicalEvidence() {
    }

    public LogicalEvidence(String concept) {
        this.concept = concept;
    }

    @Override
    public String toString() {
        String result = "Concept: " + this.getConcept();
        for (PhysicalEvidence physicalEvidence : this.getPhysicalEvidences()) {
            result += "\n\t" + physicalEvidence.toString();
        }
        return result;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getConcept() {
        return concept;
    }

    public void setConcept(String concept) {
        this.concept = concept;
    }

    public Set<PhysicalEvidence> getPhysicalEvidences() {
        return physicalEvidences;
    }

    public void setPhysicalEvidences(Set<PhysicalEvidence> physicalEvidences) {
        this.physicalEvidences = physicalEvidences;
    }

    public LogicalEvidenceBuilder getBuilder() {
        return builder;
    }

    public void setBuilder(LogicalEvidenceBuilder builder) {
        this.builder = builder;
    }

    public Set<Expertise> getExpertise() {
        return expertise;
    }

    public void setExpertise(Set<Expertise> expertise) {
        this.expertise = expertise;
    }

    public Expert getExpert() {
        return expert;
    }

    public void setExpert(Expert expert) {
        this.expert = expert;
    }

    public String getLanguage() {
        return language;
    }

    public void setLanguage(String language) {
        this.language = language;
    }
}
